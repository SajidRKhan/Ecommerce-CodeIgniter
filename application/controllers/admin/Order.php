<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Order extends CI_Controller{
    function __construct()
    {
        parent::__construct();
		
		IsLogin();
	
		
		
        $this->load->model('admin/Order_model');
		$this->load->model("admin/OrderStatus_model","OrderStatus");
    } 

    /*
     * Listing of orders
     */
    function index()
    {
		$orderStatusId= $this->input->get("orderstatusid");
		$searchTerm = $this->input->get("s");
        
		$this->load->library('pagination');
		$params['limit'] = 50; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
		
		
        $params["orderstatusid"]=$orderStatusId;
		$params["searchTerm"]=$searchTerm;
        
		$config['base_url'] = base_url()."/index.php/admin/order/index";
        $config['total_rows'] = $this->Order_model->get_all_orders_count($orderStatusId);
		
		
		
        $config['per_page']=50;
		if($searchTerm)
		{
			$config['per_page']=100;
		}
		$config['use_page_numbers'] = FALSE;
		$config['page_query_string'] = TRUE;
		$config['reuse_query_string'] = TRUE;
		
		
		$this->pagination->initialize($config);

        $data['orders'] = $this->Order_model->get_all_orders($params);		
        
		$data["OrderStatusCount"]=$this->OrderStatus->get_order_status_by_count();
		
		$data["allOrderCount"]=0;
		foreach($data["OrderStatusCount"] as $c)
		{
			$data["allOrderCount"] = $data["allOrderCount"]+$c->OrderStatusCount;
		}
		
		
        
		$data['_view'] = 'admin/order/index';
        $this->load->view('admin/layouts/main',$data);
    }

	function UpdateOrderStatus()
	{
		$idsToMove = $this->input->post("orderIdsToMove");
		$existingOrderStatusId = $this->input->post("exsistingOrderStatusId");
		$idsToMove = ltrim($idsToMove,",");
		$orderStatusId = $this->input->post("OrderStatus");
		$idsToMove = explode(",",$idsToMove);
		if($idsToMove)
		{
		foreach($idsToMove as $orderId)
		{
			$this->Order_model->update_order_status($orderId,$orderStatusId);
		}
		}
		redirect("admin/Order/index?orderstatusid=".$existingOrderStatusId."");
	}
	
	
	function PrintOrders()
	{
		$idsToMove = $this->input->post("orderIdsToPrint");
		$idsToMove = ltrim($idsToMove,",");
		$orderStatusId = $this->input->post("OrderStatus");
		$isSummary = isset($_POST["optIsSummary"])?true:false;
		$idsToMove = explode(",",$idsToMove);
				
		if($idsToMove)
		{
		$data["result"]="";
		$resultData = array();
		foreach($idsToMove as $orderId)
		{			
		$subArray = $this->Order_model->get_order_print($orderId,$orderStatusId);
		if($subArray)
		{
			 array_push($resultData,$subArray);			
		}
			
		}
		
		$data["result"]=$resultData;		
		
		if($isSummary==false)
		{
			$this->load->view('admin/report/karachiorderlist',$data);
		}
		else if($isSummary==true)
		{
			
			
			$data["OrderStatus"] = $this->OrderStatus->get_order_status_name($orderStatusId);
			
			
			
			date_default_timezone_set("Asia/Karachi");
			$createdDate = date("Y-m-d H:i:s");			
			
			$this->load->model("admin/OrderStatusSummary_model");
			$this->OrderStatusSummary_model->SaveData($data,$createdDate);
			
			
			$this->load->view('admin/report/karachiordersummary',$data);
		}
			
		
		
		}		
	}
	
	
	function addordernotes()
	{
		$OrderNotes = $this->input->post("OrderNotes");
		$orderId = $this->input->post("ordernote_orderId");
		
		
		if($OrderNotes && $orderId)
		{
			$OrderNotes=trim($OrderNotes);
			
		$param = array("ordernotes"=>$OrderNotes);
		$this->Order_model->update_order($orderId,$param);
			echo "ok";	
		}
		else{
			echo "error";
		}
		
		
	}
	
	
    /*
     * Adding a new order
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('ShippingCost','ShippingCost','numeric');
		$this->form_validation->set_rules('CODAmount','CODAmount','numeric');
		
		if($this->form_validation->run())     
        {   
            if(isset($_POST) && count($_POST)>0)
		{
			date_default_timezone_set("Asia/Karachi");
			$createdDate = date("Y-m-d H:i:s");			
			$this->load->model("admin/Customer_model","Customer");
			$this->load->model("admin/OrderStatus_model");
			$this->load->model("admin/Order_model","Order");
			
			$customerArray = array(
									"FirstName"=>$this->input->post("FirstName"),
									"LastName"=>$this->input->post("LastName"),
									"Cell1"=>$this->input->post("Cell1"),
									"Cell2"=>$this->input->post("Cell2"),
									"Email"=>$this->input->post("Email"),
									"ShippingAddress"=>$this->input->post("ShippingAddress"),
									"City"=>$this->input->post("City"),
									"NearMostFamousPlace"=>$this->input->post("NearMostFamousPlace"),
									"CreatedDate"=>$createdDate
									);
									
									
									
			$customerId = $this->Customer->add_customer($customerArray);	

			$orderArray = array(
						"ProductId"=>$this->input->post("ProductId"),
						"CODAmount"=>$this->input->post("CODAmount"),
						"ShippingCost"=>$this->input->post("ShippingCost"),
						"CustomerId"=>$customerId,
						"OrderStatusId"=>$this->input->post("OrderStatusId"),
"CreatedDate"=>$createdDate						
			);

			$orderId = $this->Order->add_order($orderArray);
			
		
			
			redirect("admin/Order/index?orderstatusid=all");
			
		}
        }
        else
        {
			$this->load->model('admin/Product_model');
			$data['all_product'] = $this->Product_model->get_all_product();
			$data['all_orderstatus'] = $this->OrderStatus->get_all_order_status();	
			$this->load->model('admin/Customer_model');
			$data['all_customer'] = $this->Customer_model->get_all_customer();
            
            $data['_view'] = 'admin/order/add';
            $this->load->view('admin/layouts/main',$data);
        }
    }  

    /*
     * Editing a order
     */
    function edit($OrderId)
    {   
        // check if the order exists before trying to edit it
        $data['order'] = $this->Order_model->get_order($OrderId);
		
		
		$this->load->model("admin/Customer_model");
		
		$pVariation = $this->input->post("ProductVariation");
        
		if($pVariation)
		{
				
				$arr = explode("\n",$pVariation);
				
				foreach($arr as $key=>$v )
				{
					$arr[$key]= stripcslashes($arr[$key]);
					
					$arr[$key]  = str_replace("\r","",$arr[$key]);
					
					if(empty(trim($arr[$key])))
					{
						//echo "empty";
						unset($arr[$key]);
					}					
					
					
				}
			$pVariation	= json_encode($arr);
		}
	
	
		
        if(isset($data['order']['OrderId']))
        {
        
			if(isset($_POST) && count($_POST) > 0)     
            {   
                $orderArray = array(
					'ProductId' => $this->input->post('ProductId'),					
					'OrderStatusId' => $this->input->post('OrderStatusId'),
					'CODAmount' => $this->input->post('CODAmount'),
					'ShippingCost' => $this->input->post('ShippingCost'),
					'OrderNotes' => $this->input->post('OrderNotes'),
					'ProductVariation'=>$pVariation
                );
				
                $this->Order_model->update_order($OrderId,$orderArray);            
				
				
				$customerArray = array(
					'FirstName' => $this->input->post('FirstName'),
					'LastName' => $this->input->post('LastName'),
					'Cell1' => $this->input->post('Cell1'),
					'Cell2' => $this->input->post('Cell2'),
					'Email' => $this->input->post('Email'),
					'City' => $this->input->post('City'),
					'ShippingAddress' => $this->input->post('ShippingAddress'),
					'NearMostFamousPlace' => $this->input->post('NearMostFamousPlace'),
				);
				
				$this->Customer_model->update_customer($this->input->post('CustomerId'),$customerArray);      				
				
				$this->session->set_flashdata("sucessmessage","Saved Successfully");
				
                redirect('admin/order/edit/'.$OrderId);
            }
            else
            {
				
				$this->load->model('admin/Product_model');
				
				$data['successmessage']=$this->session->flashdata("sucessmessage");
				$data['all_product'] = $this->Product_model->get_all_product();				
				$data['all_orderstatus'] = $this->OrderStatus->get_all_order_status();				
                $data['_view'] = 'admin/order/edit';
                $this->load->view('admin/layouts/main',$data);
            }
        }
        else
            show_error('The order you are trying to edit does not exist.');
    } 

    /*
     * Deleting order
     */
    function remove($OrderId)
    {
        //$order = $this->Order_model->get_order($OrderId);

        // check if the order exists before trying to delete it
        if(isset($OrderId))
        {
            $this->Order_model->delete_order($OrderId);
            redirect('admin/order/index');
        }
        else
            show_error('The order you are trying to delete does not exist.');
    }
    
}
