<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Report extends CI_Controller{
	var $file_path;
    function __construct()
    {
        parent::__construct();
		
		IsLogin();


include APPPATH . 'third_party/PHPExcel.php';
include APPPATH . 'third_party/simple_html_dom.php';
    $this->file_path = realpath(APPPATH . '../assets/csv');
		
    } 

	
	function SavedOrderSummaries()
	{
		$this->load->model("admin/OrderStatusSummary_model");
		$data["result"] = $this->OrderStatusSummary_model->getSavedData();
		$data['_view'] = 'admin/report/savedorderssummary';
		$this->load->view('admin/layouts/main',$data);
		
	}
	
	function viewsavedordersummary($id)
	{
		$this->load->model("admin/OrderStatusSummary_model");
		$result = $this->OrderStatusSummary_model->getObject($id);
		
		
		$data = unserialize($result->SavedData);
		
		$this->load->view('admin/report/karachiordersummary',$data);
	}
    
    function orderstatuslist()
	{
			$fromDate = $this->input->post("fromDate");
			$toDate = $this->input->post("toDate");
			$orderStatusId = $this->input->post("orderStatusId");
			$city = $this->input->post("city");
			
			
			if($fromDate && $toDate && $orderStatusId)
			{
			$this->load->model("admin/OrderStatus_model");
			$result = $this->OrderStatus_model->get_orderstatus_list($fromDate,$toDate,$orderStatusId,$city);
			
			}
			else{
				$result=array();
			}
			
			$this->load->model("admin/OrderStatus_model");
			$data["OrderStatusList"] =$this->OrderStatus_model->get_all_order_status(); 
			$data["orders"]=$result;
			$data['_view'] = 'admin/report/orderstatuslist';
			$this->load->view('admin/layouts/main',$data);
	}

	function UpdateOrderStatus()
	{
		$idsToMove = $this->input->post("orderIdsToMove");
		$idsToMove = ltrim($idsToMove,",");
		$orderStatusId = $this->input->post("OrderStatus");
		$idsToMove = explode(",",$idsToMove);
		if($idsToMove)
		{
		foreach($idsToMove as $orderId)
		{
			$this->Order_model->update_order_status($orderId,$orderStatusId);
		}
		}
		redirect("admin/Order/index");
	}
	
	
	function addordernotes()
	{
		$OrderNotes = $this->input->post("OrderNotes");
		$orderId = $this->input->post("ordernote_orderId");
		
		
		if($OrderNotes && $orderId)
		{
			$OrderNotes=trim($OrderNotes);
			
		$param = array("ordernotes"=>$OrderNotes);
		$this->Order_model->update_order($orderId,$param);
			echo "ok";	
		}
		else{
			echo "error";
		}
		
		
	}
	
	
    /*
     * Adding a new order
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('ShippingCost','ShippingCost','decimal');
		$this->form_validation->set_rules('CODAmount','CODAmount','decimal');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'ProductId' => $this->input->post('ProductId'),
				'CustomerId' => $this->input->post('CustomerId'),
				'OrderStatus' => $this->input->post('OrderStatus'),
				'CODAmount' => $this->input->post('CODAmount'),
				'ShippingCost' => $this->input->post('ShippingCost'),
            );
            
            $order_id = $this->Order_model->add_order($params);
            redirect('order/index');
        }
        else
        {
			$this->load->model('Product_model');
			$data['all_product'] = $this->Product_model->get_all_product();

			$this->load->model('Customer_model');
			$data['all_customer'] = $this->Customer_model->get_all_customer();
            
            $data['_view'] = 'order/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a order
     */
    function edit($OrderId)
    {   
        // check if the order exists before trying to edit it
        $data['order'] = $this->Order_model->get_order($OrderId);
		
		$this->load->model("admin/Customer_model");
        
        if(isset($data['order']['OrderId']))
        {
        
			if(isset($_POST) && count($_POST) > 0)     
            {   
                $orderArray = array(
					'ProductId' => $this->input->post('ProductId'),					
					'OrderStatus' => $this->input->post('OrderStatus'),
					'CODAmount' => $this->input->post('CODAmount'),
					'ShippingCost' => $this->input->post('ShippingCost'),
                );
                $this->Order_model->update_order($OrderId,$orderArray);            
				
				
				$customerArray = array(
					'Cell1' => $this->input->post('Cell1'),
					'Cell2' => $this->input->post('Cell2'),
					'Email' => $this->input->post('Email'),
					'City' => $this->input->post('City'),
					'ShippingAddress' => $this->input->post('ShippingAddress'),
					'NearMostFamousPlace' => $this->input->post('NearMostFamousPlace'),
				);
				
				$this->Customer_model->update_customer($this->input->post('CustomerId'),$customerArray);      				
				
                redirect('admin/order/index');
            }
            else
            {
				$this->load->model('admin/Product_model');
				$data['all_product'] = $this->Product_model->get_all_product();				

                $data['_view'] = 'admin/order/edit';
                $this->load->view('admin/layouts/main',$data);
            }
        }
        else
            show_error('The order you are trying to edit does not exist.');
    } 

    /*
     * Deleting order
     */
    function remove($OrderId)
    {
        //$order = $this->Order_model->get_order($OrderId);

        // check if the order exists before trying to delete it
        if(isset($OrderId))
        {
            $this->Order_model->delete_order($OrderId);
            redirect('admin/order/index');
        }
        else
            show_error('The order you are trying to delete does not exist.');
    }
	
	
	function uploadtcspayment()
	{
		
		if(isset($_POST) && count($_POST) > 0)   
		{
			
			$paymentCounter=0;
			$deliveryCounter=0;
			
			$this->load->model("admin/Tcspayment_model");
	
	        if($_FILES["DeliveryDetails"] && $_FILES["DeliveryDetails"]["size"]>0)
			{
				
			$deliveryFile = $this->csv_to_array($_FILES["DeliveryDetails"]["tmp_name"]);
			
			
			$deliveryCounter=0;
			if($deliveryFile)
			{
				foreach($deliveryFile as $f)
				{
					$params = array("CNNumber"=>$f["CNNumber"],"BookingDate"=>$f["BookingDate"]);										
					if($this->Tcspayment_model->add_delivery($params))
					{
							$deliveryCounter++;
					}
					
				}
				//$data["error"]=$counter." Records added";
				//$data['_view'] = 'admin/report/tcspayment';
				//$this->load->view('admin/layouts/main',$data);
			}	
			}
		
		if($_FILES["PaymentDetails"] && $_FILES["PaymentDetails"]["size"]>0)
			{
				
			$paymentFile = $this->parse_paymentDetail($_FILES["PaymentDetails"]["tmp_name"]);
			
			
			
			if($paymentFile)
			{
				foreach($paymentFile as $f)
				{
					
					$params = array("CNNumber"=>$f["CNNumber"]);
						
						if($f["CODAmount"] && $f["CODAmount"]!="--" &&  $f["CODAmount"]!="0")
						{
							$params["CODAmount"]=$f["CODAmount"];
							$params["CODAmountPeriod"]=$f["PaymentPeriod"];
						}
						if($f["ShippingCharges"] && $f["ShippingCharges"]!="--" && $f["ShippingCharges"]!="0")
						{
							$params["ShippingCharges"]=$f["ShippingCharges"];
							$params["ShippingChargesPeriod"]=$f["PaymentPeriod"];
						}
					$params["DeliveryStatus"]=$f["DeliveryStatus"];
					if(sizeof($params)>2)
					{
					if($this->Tcspayment_model->add_payment($params))
					{
							$paymentCounter++;
					}	
					}
					
					
				}
				//$data["error"]=$counter." Records added";
				
			}	
			}
			
				$data["error"]=$deliveryCounter." Delivery Details added \n".$paymentCounter." Payment Details Added";
				$data['_view'] = 'admin/report/tcspayment';
				$this->load->view('admin/layouts/main',$data);
			
		}
		else{			
			$data['_view'] = 'admin/report/tcspayment';
			$this->load->view('admin/layouts/main',$data);
		}
			
	}
    
	
	
	
	function csv_to_array($file='', $delimiter=',')
	{
		$htmlContent=file_get_html($file);
		
		$table = array();
		
        
        foreach ($htmlContent->find('tr') as $row) {
            //$table[]	=$row->find('td',2)->plaintext;
            
			
			$tmpArray=array();
            foreach($row->find('td') as $cell)
            {
                $tmpArray[]=trim($cell->plaintext);
				
            }

			//print_r($tmpArray);
            if(!empty($tmpArray) && sizeof($tmpArray)==12)
            {
                
                $asso_array=array(                
                "CNNumber"=>$tmpArray[2],
                "BookingDate"=>empty($tmpArray[4])==false ? date("Y-m-d H:i:s",strtotime($tmpArray[4])) :$tmpArray[4]                
                );
                
                array_push($table,$asso_array);
			}
		}
		//print_r($table);
		//die();
		return $table;
		
	}
	
	function parse_paymentDetail($file='', $delimiter=',')
	{
		$htmlContent=file_get_html($file);
		
		$table = array();
		
        
        foreach ($htmlContent->find('tr') as $row) {
            //$table[]	=$row->find('td',2)->plaintext;
            
			
			$tmpArray=array();
            foreach($row->find('td') as $cell)
            {
                $tmpArray[]=trim($cell->plaintext);
				
            }

			//print_r($tmpArray);
            if(!empty($tmpArray) && sizeof($tmpArray)==12)
            {
				
                $asso_array=array(                
                "CNNumber"=>$tmpArray[1],
                "PaymentPeriod"=>$tmpArray[8],
				"CODAmount"=>$tmpArray[10],
				"ShippingCharges"=>$tmpArray[11],
				"DeliveryStatus"=>$tmpArray[9]
                );
                
				
                array_push($table,$asso_array);
			}
		}
		//print_r($table);
		//die();
		return $table;
		
	}
	
	
	function tcspaymentdetail()
	{
			$this->load->model("admin/Tcspayment_model");
			
			$param["filter"] =$this->input->get("filter"); 
			$param["sort"]=$this->input->get("sort");
			$param["fromDate"]=$this->input->get("fromDate");
			$param["toDate"]=$this->input->get("toDate");
			$param["deliveryStatus"]=$this->input->get("deliveryStatus");
		
			$data["allrecords"]=$this->Tcspayment_model->GetPaymentDetail($param);
		
			$data['_view'] = 'admin/report/tcspaymentdetail';
			$this->load->view('admin/layouts/main',$data);
		
	}
	
	function gettcsexcel()
	{
		
		
		//header('Content-type: text/csv; charset=ascii'); 

		date_default_timezone_set("Asia/Karachi");		
		//header('Content-Disposition: attachment; filename=TCSConfirmedOrders__'.date("d-M-y__h-i-a").'.csv');
		
		$this->load->model("admin/Tcsexcel_model");
		
		$queryData = $this->Tcsexcel_model->get_data();
		
		
		
		if($queryData)
		{
			//$data["queryData"]=$queryData;
			//$this->load->view('admin/report/tcsexcel',$data);
			
			  $this->load->dbutil();
				$this->load->helper('file');
				
				$delimiter = ",";
    $newline = "\r\n";
    $new_report = $this->dbutil->csv_from_result($queryData, $delimiter, $newline);
    
	
	
	// write file
    write_file($this->file_path . '/csv_file.csv', $new_report);
    //force download from server
    $this->load->helper('download');
    $data = file_get_contents($this->file_path . '/csv_file.csv');
    $name = 'TCSConfirmedOrders__'.date("d-M-y__h-i-a").'.csv';
    force_download($name, $data);		
						
		}		
	}
	
	function GetKarachiOrderList()
		{
			$this->load->model("admin/Order_model");
			$data["result"] = $this->Order_model->GetKarachiOrderList();
			
			//$data['_view'] = 'admin/report/karachiorderlist';
			$this->load->view('admin/report/karachiorderlist',$data);
		}
		
		function GetKarachiOrderSummary()
		{
			$this->load->model("admin/Order_model");
			$data["result"] = $this->Order_model->GetKarachiOrderList();
			
			//$data['_view'] = 'admin/report/karachiorderlist';
			$this->load->view('admin/report/karachiordersummary',$data);
		}
		
		function OrderDetail()
		{
			if(isset($_POST) && count($_POST) > 0)  
			{
			$fromDate = $this->input->post("fromDate");
			$toDate = $this->input->post("toDate");
			$orderStatusId = $this->input->post("OrderStatusId");
			
			$this->load->model("admin/order_model");
			$queryData = $this->order_model->GetOrderDetailReport($fromDate,$toDate,$orderStatusId);
			
			
			
			$this->load->dbutil();
			$this->load->helper('file');
				
			$delimiter = ",";
			$newline = "\r\n";
			$new_report = $this->dbutil->csv_from_result($queryData, $delimiter, $newline);    
	
			write_file($this->file_path . '/csv_file_orderdetail.csv', $new_report);
    
			$this->load->helper('download');
			$data = file_get_contents($this->file_path . '/csv_file_orderdetail.csv');
			$name = 'OrderDetail_'.sitename().'__'.date("d-M-y__h-i-a").'.csv';
			force_download($name, $data);		
			}
			else{
				
				$this->load->model("admin/OrderStatus_model");
				$data["all_orderstatus"]=$this->OrderStatus_model->get_all_order_status();
				$data['_view'] = 'admin/report/orderdetail';
				$this->load->view('admin/layouts/main',$data);
				
			}
			
		}
		
		function ProductPurchaseReport()
		{
			if(isset($_POST) && count($_POST) > 0)  
			{
			$fromDate = $this->input->post("fromDate");
			$toDate = $this->input->post("toDate");
			$orderStatusId = $this->input->post("OrderStatusId");
			
			$this->load->model("admin/order_model");
			$queryData = $this->order_model->GetProductPurchaseReport($fromDate,$toDate,$orderStatusId);
			
			
			
			$this->load->dbutil();
			$this->load->helper('file');
				
			$delimiter = ",";
			$newline = "\r\n";
			$new_report = $this->dbutil->csv_from_result($queryData, $delimiter, $newline);    
	
			write_file($this->file_path . '/csv_file_productpurchase.csv', $new_report);
    
			$this->load->helper('download');
			$data = file_get_contents($this->file_path . '/csv_file_productpurchase.csv');
			$name = 'ProductPurchase_'.sitename().'__'.date("d-M-y__h-i-a").'.csv';
			force_download($name, $data);		
			}
			else{
				
				$this->load->model("admin/OrderStatus_model");
				$data["all_orderstatus"]=$this->OrderStatus_model->get_all_order_status();
				$data['_view'] = 'admin/report/productpurchase';
				$this->load->view('admin/layouts/main',$data);
				
			}
			
		}
}
